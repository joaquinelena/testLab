@page "/order-history"
@rendermode InteractiveServer
@using BlazorClient.DTOs
@using BlazorClient.Services
@inject OrderService orderService

<h3>Historial de Órdenes</h3>

<div class="row mb-3">
    <div class="col-md-6">
        <label class="form-label">Cliente ID:</label>
        <div class="input-group">
            <input type="number" class="form-control" @bind="customerId" />
            <button class="btn btn-primary" @onclick="LoadOrders">Buscar</button>
        </div>
    </div>
</div>

@if (loading)
{
    <p>Cargando...</p>
}
else if (message != null)
{
    <div class="alert alert-danger">@message</div>
}
else if (orders != null)
{
    @if (orders.Count == 0)
    {
        <p>No se encontraron órdenes para este cliente.</p>
    }
    else
    {
        <table class="table">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Cliente</th>
                    <th>Fecha</th>
                    <th>Total</th>
                    <th>Acciones</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var order in orders)
                {
                    <tr>
                        <td>@order.Id</td>
                        <td>@order.CustomerName</td>
                        <td>@order.OrderDate.ToString("dd/MM/yyyy HH:mm")</td>
                        <td>$@order.TotalAmount.ToString("F2")</td>
                        <td>
                            <button class="btn btn-info" @onclick="() => ShowDetails(order)">Ver Detalles</button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>

        @if (selectedOrder != null)
        {
            <h4>Detalles de la Orden ID: @selectedOrder.Id</h4>
            <table class="table">
                <thead>
                    <tr>
                        <th>Producto</th>
                        <th>Cantidad</th>
                        <th>Precio Unitario</th>
                        <th>Subtotal</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in selectedOrder.Items)
                    {
                        <tr>
                            <td>@item.ProductName</td>
                            <td>@item.Quantity</td>
                            <td>$@item.UnitPrice.ToString("F2")</td>
                            <td>$@item.Subtotal.ToString("F2")</td>
                        </tr>
                    }
                </tbody>
                <tfoot>
                    <tr>
                        <th colspan="3">Total:</th>
                        <th>$@selectedOrder.TotalAmount.ToString("F2")</th>
                    </tr>
                </tfoot>
            </table>
        }
    }
}

@code {
    private bool loading = false;
    private string message;
    private int customerId;
    private List<OrderDTO> orders;
    private OrderDTO selectedOrder;

    private async Task LoadOrders()
    {
        if (customerId <= 0)
        {
            message = "Por favor, ingrese un ID de cliente válido.";
            return;
        }

        loading = true;
        message = null;
        selectedOrder = null;

        try
        {
            orders = (List<OrderDTO>)await orderService.GetOrdersByCustomerAsync(customerId);
            loading = false;
        }
        catch (Exception ex)
        {
            message = $"Error al cargar órdenes: {ex.Message}";
            loading = false;
        }
    }

    private void ShowDetails(OrderDTO order)
    {
        selectedOrder = order;
    }
}